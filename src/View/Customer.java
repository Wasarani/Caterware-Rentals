/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Model.DbConnection;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;


/**
 *
 * @author r m s rathnayake
 */
public class Customer extends javax.swing.JFrame {

    /**
     * Creates new form Customer
     */
    public Customer() {
        initComponents();
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.addColumn("CustomerID");
        tableModel.addColumn("CustomerName");
        tableModel.addColumn("Address");
        tableModel.addColumn("Contact");
        
        customerList.setModel(tableModel);
displayExistingItemsData();
        
        customerList.addMouseListener(new MouseAdapter() {
    @Override
    public void mouseClicked(MouseEvent e) {
        int selectedRow = customerList.getSelectedRow();
        if (selectedRow != -1) {
            // A row is selected, enable the Delete button
            btn_delete.setEnabled(true);
        } else {
            // No row is selected, disable the Delete button
            btn_delete.setEnabled(false);
        }
    }
});
        
   //     txt_cusId.addKeyListener(new IDTextFieldKeyListener());
    //    txt_cusName.addKeyListener(new letterSpaceTextFieldKey()); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tab9 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        tab10 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        tab11 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        tab12 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_cusId = new javax.swing.JTextField();
        txt_cusName = new javax.swing.JTextField();
        txt_cusAdress = new javax.swing.JTextField();
        txt_cusTel = new javax.swing.JTextField();
        btn_register = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerList = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 51));

        tab9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab9MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tab9MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tab9MouseExited(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel7.setText("Items");

        javax.swing.GroupLayout tab9Layout = new javax.swing.GroupLayout(tab9);
        tab9.setLayout(tab9Layout);
        tab9Layout.setHorizontalGroup(
            tab9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tab9Layout.setVerticalGroup(
            tab9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addContainerGap())
        );

        tab10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab10MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tab10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tab10MouseExited(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel8.setText("Rent");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout tab10Layout = new javax.swing.GroupLayout(tab10);
        tab10.setLayout(tab10Layout);
        tab10Layout.setHorizontalGroup(
            tab10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tab10Layout.setVerticalGroup(
            tab10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap())
        );

        tab11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab11MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tab11MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tab11MouseExited(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel9.setText("Return");

        javax.swing.GroupLayout tab11Layout = new javax.swing.GroupLayout(tab11);
        tab11.setLayout(tab11Layout);
        tab11Layout.setHorizontalGroup(
            tab11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tab11Layout.setVerticalGroup(
            tab11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap())
        );

        tab12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab12MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tab12MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tab12MouseExited(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel10.setText("Repots");

        javax.swing.GroupLayout tab12Layout = new javax.swing.GroupLayout(tab12);
        tab12.setLayout(tab12Layout);
        tab12Layout.setHorizontalGroup(
            tab12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        tab12Layout.setVerticalGroup(
            tab12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 41, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tab11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tab12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tab10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tab9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(tab9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tab10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tab11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tab12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel1.setText("Customers Registration");

        jPanel3.setBackground(new java.awt.Color(255, 204, 51));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 460, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 11, Short.MAX_VALUE)
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel2.setText("Customer Id");

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel3.setText("Customer Name");

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel4.setText(" Customer Adress");

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel5.setText("Contact No.");

        txt_cusId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cusIdActionPerformed(evt);
            }
        });

        txt_cusName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cusNameActionPerformed(evt);
            }
        });

        txt_cusAdress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cusAdressActionPerformed(evt);
            }
        });

        txt_cusTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cusTelActionPerformed(evt);
            }
        });

        btn_register.setBackground(new java.awt.Color(0, 51, 255));
        btn_register.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btn_register.setForeground(new java.awt.Color(255, 255, 255));
        btn_register.setText("Register");
        btn_register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registerActionPerformed(evt);
            }
        });

        btn_delete.setBackground(new java.awt.Color(0, 51, 255));
        btn_delete.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btn_delete.setForeground(new java.awt.Color(255, 255, 255));
        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_update.setBackground(new java.awt.Color(0, 51, 255));
        btn_update.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btn_update.setForeground(new java.awt.Color(255, 255, 255));
        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel6.setText("Registered Customers Details");

        customerList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Customer Id", "Customer Name", " Customer Adress", "Contact No."
            }
        ));
        customerList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(customerList);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txt_cusId, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(txt_cusName, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_cusAdress, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_cusTel, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(21, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btn_register, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1))
                        .addGap(25, 25, 25))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(49, 49, 49)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_cusId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_cusName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txt_cusTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_cusAdress, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_register, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_cusAdressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cusAdressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cusAdressActionPerformed

    private void txt_cusNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cusNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cusNameActionPerformed

    private void txt_cusTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cusTelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cusTelActionPerformed

    private void txt_cusIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cusIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cusIdActionPerformed

    private void customerListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerListMouseClicked
    int selectedRow = customerList.getSelectedRow();
    if (selectedRow != -1) {
        // A row is selected, so you can retrieve the data from the selected row
        DefaultTableModel tableModel = (DefaultTableModel) customerList.getModel();
        String customerID = tableModel.getValueAt(selectedRow, 0).toString();
        String customerName = tableModel.getValueAt(selectedRow, 1).toString();
        String address = tableModel.getValueAt(selectedRow, 2).toString();
        String contact = tableModel.getValueAt(selectedRow, 3).toString();
        // Populate the text fields and combo box with the selected customer's data
        txt_cusId.setText(customerID);
        txt_cusName.setText(customerName);
        txt_cusAdress.setText(address);
        txt_cusTel.setText(contact);

        // You can also enable the "Update" and "Delete" buttons here if needed
        btn_update.setEnabled(true);
        btn_delete.setEnabled(true);
    }

        // TODO add your handling code here:
    }//GEN-LAST:event_customerListMouseClicked

    private void btn_registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registerActionPerformed
        // TODO add your handling code here:
        saveCusToDatabase();
    }//GEN-LAST:event_btn_registerActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
 int selectedRow = customerList.getSelectedRow();
    if (selectedRow != -1) {
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this car?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            DefaultTableModel tableModel = (DefaultTableModel) customerList.getModel();
            
            // Get the carRegistration value from the selected row
            String CustomerID = (String) tableModel.getValueAt(selectedRow, 0); // Assuming carRegistration is in the first column
            
            // Remove the selected row from the table
            tableModel.removeRow(selectedRow);

            try {
                try ( // Establish a database connection
                        Connection connection = DbConnection.getConnection();) {
                    String sql = "DELETE FROM Customer WHERE CustomerID = ?";
                    
                    PreparedStatement preparedStatement = connection.prepareStatement(sql);
                    preparedStatement.setString(1, CustomerID);
                    
                    int rowsAffected = preparedStatement.executeUpdate();
                    
                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(this, "Customer deleted successfully.");
                    } else {
                        JOptionPane.showMessageDialog(this, "Failed to delete Customer from the database.");
                    }
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a car to delete.");
    }              // TODO add your handling code here:
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        // TODO add your handling code here:
        int selectedRow = customerList.getSelectedRow();
    if (selectedRow != -1) {
        // Get the updated data from the text fields
        String updatedCustomerID = txt_cusId.getText();
        String updatedCustomerName = txt_cusName.getText();
        String updatedAddress = txt_cusAdress.getText();
        String updatedContact =txt_cusTel.getText();

        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to update this customer?", "Confirm Update", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            // Update the data in the table (user interface)
            DefaultTableModel tableModel = (DefaultTableModel) customerList.getModel();
            tableModel.setValueAt(updatedCustomerID, selectedRow, 0);
            tableModel.setValueAt(updatedCustomerName, selectedRow, 1);
            tableModel.setValueAt(updatedAddress, selectedRow, 2);
            tableModel.setValueAt(updatedContact, selectedRow, 3);

            // Update the data in the MySQL table
            try {
                // Define the SQL query to update the record in the database
                try ( // Establish a database connection
                        Connection connection = DbConnection.getConnection();) {
                    // Define the SQL query to update the record in the database
                    String sql = "UPDATE Customer SET CustomerName=?, Address=?, Contact=? WHERE CustomerID=?";
                    // Prepare the statement
                    PreparedStatement preparedStatement = connection.prepareStatement(sql);
                    preparedStatement.setString(1, updatedCustomerName);
                    preparedStatement.setString(2, updatedAddress);
                    preparedStatement.setString(3, updatedContact);
                    preparedStatement.setString(4, updatedCustomerID);
                    // Execute the update
                    int rowsAffected = preparedStatement.executeUpdate();
                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(this, "Customer updated successfully.");
                    } else {
                        JOptionPane.showMessageDialog(this, "Failed to update customer in the database.");
                    }
                    // Close the database connection
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a customer to update.");
    }
    }//GEN-LAST:event_btn_updateActionPerformed

    private void tab9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab9MouseEntered

float[] hsbvals = new float[3];
        Color.RGBtoHSB(255,255,204, hsbvals);
        tab9.setBackground(Color.getHSBColor(hsbvals[0], hsbvals[1], hsbvals[2]));
        // TODO add your handling code here:
    }//GEN-LAST:event_tab9MouseEntered

    private void tab9MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab9MouseExited
float[] hsbvals = new float[3];
        Color.RGBtoHSB(242,242,242, hsbvals);
        tab9.setBackground(Color.getHSBColor(hsbvals[0], hsbvals[1], hsbvals[2]));


        // TODO add your handling code here:
    }//GEN-LAST:event_tab9MouseExited

    private void tab10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab10MouseEntered
float[] hsbvals = new float[3];
        Color.RGBtoHSB(255,255,204, hsbvals);
        tab10.setBackground(Color.getHSBColor(hsbvals[0], hsbvals[1], hsbvals[2]));
        // TODO add your handling code here:
    }//GEN-LAST:event_tab10MouseEntered

    private void tab10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab10MouseExited
float[] hsbvals = new float[3];
        Color.RGBtoHSB(242,242,242, hsbvals);
        tab10.setBackground(Color.getHSBColor(hsbvals[0], hsbvals[1], hsbvals[2]));

        
// TODO add your handling code here:
    }//GEN-LAST:event_tab10MouseExited

    private void tab11MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab11MouseEntered
float[] hsbvals = new float[3];
        Color.RGBtoHSB(255,255,204, hsbvals);
        tab11.setBackground(Color.getHSBColor(hsbvals[0], hsbvals[1], hsbvals[2]));        
// TODO add your handling code here:
    }//GEN-LAST:event_tab11MouseEntered

    private void tab11MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab11MouseExited
       float[] hsbvals = new float[3];
        Color.RGBtoHSB(242,242,242, hsbvals);
        tab11.setBackground(Color.getHSBColor(hsbvals[0], hsbvals[1], hsbvals[2]));


        // TODO add your handling code here:
    }//GEN-LAST:event_tab11MouseExited

    private void tab12MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab12MouseEntered
       float[] hsbvals = new float[3];
        Color.RGBtoHSB(255,255,204, hsbvals);
        tab12.setBackground(Color.getHSBColor(hsbvals[0], hsbvals[1], hsbvals[2]));
        // TODO add your handling code here:
    }//GEN-LAST:event_tab12MouseEntered

    private void tab12MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab12MouseExited
float[] hsbvals = new float[3];
        Color.RGBtoHSB(242,242,242, hsbvals);
        tab12.setBackground(Color.getHSBColor(hsbvals[0], hsbvals[1], hsbvals[2]));

        
// TODO add your handling code here:
    }//GEN-LAST:event_tab12MouseExited

    private void tab9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab9MouseClicked
         dispose(); 
        Items newForm = new Items();

        // Set the behavior of the new form (e.g., default close operation)
        newForm.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        // Display the new form
        newForm.pack();
        newForm.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_tab9MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel8MouseClicked

    private void tab10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab10MouseClicked
dispose(); 
        Rental newForm = new Rental();

        // Set the behavior of the new form (e.g., default close operation)
        newForm.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        // Display the new form
        newForm.pack();
        newForm.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_tab10MouseClicked

    private void tab11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab11MouseClicked
dispose(); 
        Return newForm = new Return();

        // Set the behavior of the new form (e.g., default close operation)
        newForm.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        // Display the new form
        newForm.pack();
        newForm.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_tab11MouseClicked

    private void tab12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab12MouseClicked
dispose(); 
        Report newForm = new Report();

        // Set the behavior of the new form (e.g., default close operation)
        newForm.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        // Display the new form
        newForm.pack();
        newForm.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_tab12MouseClicked
private void saveCusToDatabase() {
    String CustomerID = txt_cusId.getText();
    String CustomerName = txt_cusName.getText();
    String Address = txt_cusAdress.getText();
   String Contact = txt_cusTel.getText();

    try {
        try ( // Establish a database connection
                 Connection connection = DbConnection.getConnection();) {
            String sql = "INSERT INTO Customer (CustomerID, CustomerName, Address, Contact) VALUES (?, ?, ?, ?)";
            
            PreparedStatement preparedStatement = connection.prepareStatement(sql);
            preparedStatement.setString(1, CustomerID);
            preparedStatement.setString(2, CustomerName);
            preparedStatement.setString(3, Address);
            preparedStatement.setString(4, Contact);
            
            int rowsAffected = preparedStatement.executeUpdate();
            
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Customer added successfully.");
                // Clear the input fields after successful insertion
                txt_cusId.setText("");
                txt_cusName.setText("");
                txt_cusAdress.setText("");
                txt_cusTel.setText("");
                
                   DefaultTableModel tableModel = (DefaultTableModel) customerList.getModel();
            tableModel.addRow(new Object[]{CustomerID, CustomerName, Address, Contact});
            } else {
                JOptionPane.showMessageDialog(this, "Failed to add Customer.");
            }
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    }
}
 
        
private void displayExistingItemsData() {
    try {
        try ( // Establish a database connection
               Connection connection = DbConnection.getConnection();) {
            String sql = "SELECT CustomerID, CustomerName, Address, Contact FROM Customer";
            
            PreparedStatement preparedStatement = connection.prepareStatement(sql);
            ResultSet resultSet = preparedStatement.executeQuery();
            
            DefaultTableModel tableModel = (DefaultTableModel) customerList.getModel();
            
            while (resultSet.next()) {
                String CustomerID = resultSet.getString("CustomerID");
                String CustomerName = resultSet.getString("CustomerName");
                String Address = resultSet.getString("Address");
                String contact = resultSet.getString("Contact");
            
                // Add the fetched data as a new row in the table
                tableModel.addRow(new Object[]{CustomerID, CustomerName, Address, contact});
            }
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    }
}

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Customer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_register;
    private javax.swing.JButton btn_update;
    private javax.swing.JTable customerList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel tab10;
    private javax.swing.JPanel tab11;
    private javax.swing.JPanel tab12;
    private javax.swing.JPanel tab9;
    private javax.swing.JTextField txt_cusAdress;
    private javax.swing.JTextField txt_cusId;
    private javax.swing.JTextField txt_cusName;
    private javax.swing.JTextField txt_cusTel;
    // End of variables declaration//GEN-END:variables
}
